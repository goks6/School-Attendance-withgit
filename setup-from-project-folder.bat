@echo off
echo ЁЯЪА School Attendance System Setup (Project Folder)
echo ===================================================

REM Navigate to the project folder
echo ЁЯУБ Project folder рдордзреНрдпреЗ рдЬрд╛рдд рдЖрд╣реЗ...
cd /d "D:\school attendance\project"

if not exist "src" (
    if not exist "backend" (
        echo тЭМ Project files рд╕рд╛рдкрдбрд▓реЗ рдирд╛рд╣реАрдд
        echo рдХреГрдкрдпрд╛ рддрдкрд╛рд╕рд╛ рдХреА рддреБрдореНрд╣реА рдпреЛрдЧреНрдп folder рдордзреНрдпреЗ рдЖрд╣рд╛рдд
        pause
        exit /b 1
    )
)

echo тЬЕ Project files рд╕рд╛рдкрдбрд▓реЗ!
echo ЁЯУН Current location: %CD%

echo.
echo рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╛рдп рдХрд░рд╛рдпрдЪреЗ рдЖрд╣реЗ?
echo.
echo 1. GitHub рд╡рд░ upload рдХрд░рд╛
echo 2. ZIP file рддрдпрд╛рд░ рдХрд░рд╛ (Desktop рд╡рд░)
echo 3. рджреЛрдиреНрд╣реА рдХрд░рд╛
echo 4. Project structure рдкрд╛рд╣рд╛
echo 5. Exit
echo.
set /p choice="рддреБрдордЪреА рдирд┐рд╡рдб (1-5): "

if "%choice%"=="1" goto github_upload
if "%choice%"=="2" goto create_zip
if "%choice%"=="3" goto do_both
if "%choice%"=="4" goto show_structure
if "%choice%"=="5" exit /b 0

echo тЭМ рдЕрд╡реИрдз рдирд┐рд╡рдб
pause
exit /b 1

:show_structure
echo.
echo ЁЯУБ Project Structure:
echo =====================
tree /F /A
echo.
pause
goto :eof

:github_upload
echo.
echo ЁЯМР GitHub Upload Process...
echo ===========================

REM Check git installation
git --version >nul 2>&1
if errorlevel 1 (
    echo тЭМ Git installed рдирд╛рд╣реА
    echo Download рдХрд░рд╛: https://git-scm.com/download/win
    pause
    exit /b 1
)

REM Remove existing git
if exist ".git" (
    echo ЁЯЧСя╕П Existing git repository рдХрд╛рдврдд рдЖрд╣реЗ...
    rmdir /s /q .git
)

REM Initialize git
echo ЁЯФз Git repository initialize рдХрд░рдд рдЖрд╣реЗ...
git init

REM Configure git user if needed
git config user.name >nul 2>&1
if errorlevel 1 (
    set /p username="рддреБрдордЪреЗ рдирд╛рд╡: "
    set /p email="рддреБрдордЪрд╛ email: "
    git config user.name "%username%"
    git config user.email "%email%"
)

REM Add files
echo ЁЯУж Files add рдХрд░рдд рдЖрд╣реЗ...
git add .

REM Commit
echo ЁЯТ╛ Commit рдХрд░рдд рдЖрд╣реЗ...
git commit -m "Initial commit: School Attendance Management System from project folder"

REM Set main branch
git branch -M main

echo.
echo ЁЯМР GitHub Repository рддрдпрд╛рд░ рдХрд░рд╛:
echo 1. https://github.com рд╡рд░ рдЬрд╛
echo 2. "New repository" рдХреНрд▓рд┐рдХ рдХрд░рд╛
echo 3. Name: school-attendance-system
echo 4. "Create repository" рдХреНрд▓рд┐рдХ рдХрд░рд╛
echo.

set /p github_username="GitHub Username: "

if "%github_username%"=="" (
    echo тЭМ Username рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗ
    pause
    exit /b 1
)

REM Add remote and push
git remote add origin https://github.com/%github_username%/school-attendance-system.git
echo ЁЯЪА GitHub рд╡рд░ upload рдХрд░рдд рдЖрд╣реЗ...
git push -u origin main

if errorlevel 1 (
    echo тЭМ Upload failed
    echo ЁЯФС Personal Access Token рд╡рд╛рдкрд░рд╛ password рдРрд╡рдЬреА
    pause
    exit /b 1
)

echo тЬЕ GitHub upload successful!
echo ЁЯМР URL: https://github.com/%github_username%/school-attendance-system
pause
goto :eof

:create_zip
echo.
echo ЁЯУж ZIP File рддрдпрд╛рд░ рдХрд░рдд рдЖрд╣реЗ...
echo ==============================

REM Create export directory on Desktop
set DESKTOP=%USERPROFILE%\Desktop
set EXPORT_DIR=%DESKTOP%\school-attendance-system-complete
if exist "%EXPORT_DIR%" rmdir /s /q "%EXPORT_DIR%"
mkdir "%EXPORT_DIR%"

echo ЁЯУБ Export directory: %EXPORT_DIR%

REM Copy all project files
echo ЁЯУ▒ Frontend files copy рдХрд░рдд рдЖрд╣реЗ...
mkdir "%EXPORT_DIR%\frontend"

if exist "src" xcopy "src" "%EXPORT_DIR%\frontend\src\" /E /I /Q >nul
if exist "public" xcopy "public" "%EXPORT_DIR%\frontend\public\" /E /I /Q >nul
if exist "package.json" copy "package.json" "%EXPORT_DIR%\frontend\" >nul
if exist "index.html" copy "index.html" "%EXPORT_DIR%\frontend\" >nul
if exist "vite.config.ts" copy "vite.config.ts" "%EXPORT_DIR%\frontend\" >nul
if exist "tailwind.config.js" copy "tailwind.config.js" "%EXPORT_DIR%\frontend\" >nul
if exist "tsconfig*.json" copy "tsconfig*.json" "%EXPORT_DIR%\frontend\" >nul
if exist "postcss.config.js" copy "postcss.config.js" "%EXPORT_DIR%\frontend\" >nul
if exist "eslint.config.js" copy "eslint.config.js" "%EXPORT_DIR%\frontend\" >nul

echo ЁЯФз Backend files copy рдХрд░рдд рдЖрд╣реЗ...
if exist "backend" xcopy "backend" "%EXPORT_DIR%\backend\" /E /I /Q >nul

REM Create README
echo ЁЯУЪ Documentation рддрдпрд╛рд░ рдХрд░рдд рдЖрд╣реЗ...
(
echo # рд╢рд╛рд│рд╛ рд╣рдЬреЗрд░реА рд╡реНрдпрд╡рд╕реНрдерд╛рдкрди рдкреНрд░рдгрд╛рд▓реА
echo ## School Attendance Management System
echo.
echo ### ЁЯМЯ Features:
echo - ЁЯУ▒ Modern React Frontend with Tailwind CSS
echo - ЁЯФз Node.js Backend with SQLite Database
echo - ЁЯСе Enhanced Student Management
echo - ЁЯУЕ Advanced Attendance Tracking
echo - ЁЯУв Notice Management System
echo - ЁЯПЖ Achievement Tracking
echo - ЁЯУК Comprehensive Reports
echo - ЁЯОи Colorful UI Design
echo.
echo ### ЁЯЪА Quick Start:
echo.
echo #### Method 1: Use Scripts
echo 1. Run `install.bat` to install dependencies
echo 2. Run `start.bat` to start both servers
echo.
echo #### Method 2: Manual
echo ```bash
echo # Backend
echo cd backend
echo npm install
echo npm start
echo.
echo # Frontend (in new terminal)
echo cd frontend  
echo npm install
echo npm run dev
echo ```
echo.
echo ### ЁЯФР Demo Credentials:
echo - **Principal**: 9876543210 / 9876543210
echo - **Teacher**: 9876543211 / 9876543211
echo.
echo ### ЁЯМР URLs:
echo - Frontend: http://localhost:5173
echo - Backend: http://localhost:3000
echo.
echo ### ЁЯЫая╕П Technology Stack:
echo - Frontend: React 18, TypeScript, Tailwind CSS, Vite
echo - Backend: Node.js, Express.js, SQLite3
echo - Authentication: JWT
echo - UI: Lucide React Icons
echo.
echo ### ЁЯУБ Project Structure:
echo ```
echo school-attendance-system/
echo тФЬтФАтФА frontend/          # React application
echo тФЬтФАтФА backend/           # Node.js API server
echo тФЬтФАтФА install.bat       # Install dependencies
echo тФЬтФАтФА start.bat         # Start both servers
echo тФФтФАтФА README.md         # This file
echo ```
echo.
echo ### ЁЯОп Key Features:
echo - Student management with blood group, emergency contacts
echo - Real-time attendance tracking with analytics
echo - Notice management with different types and priorities
echo - Achievement tracking system
echo - Comprehensive reporting and statistics
echo - Mobile-responsive design
echo - Marathi language support
echo.
echo ### ЁЯФз Development:
echo - Add new features in respective frontend/backend folders
echo - Database schema in `backend/config/database-sqlite.js`
echo - API routes in `backend/routes/`
echo - React components in `frontend/src/`
echo.
echo ### ЁЯУЮ Support:
echo Check code comments for detailed implementation details.
) > "%EXPORT_DIR%\README.md"

REM Create install script
(
echo @echo off
echo echo ЁЯЪА Installing School Attendance Management System...
echo echo ================================================
echo echo.
echo echo ЁЯУ▒ Installing frontend dependencies...
echo cd frontend
echo npm install
echo if errorlevel 1 ^(
echo     echo тЭМ Frontend installation failed
echo     echo Make sure Node.js is installed: https://nodejs.org/
echo     pause
echo     exit /b 1
echo ^)
echo echo тЬЕ Frontend dependencies installed
echo.
echo echo ЁЯФз Installing backend dependencies...
echo cd ..\backend
echo npm install
echo if errorlevel 1 ^(
echo     echo тЭМ Backend installation failed
echo     pause
echo     exit /b 1
echo ^)
echo echo тЬЕ Backend dependencies installed
echo.
echo cd ..
echo echo.
echo echo ЁЯОЙ Installation completed successfully!
echo echo.
echo echo ЁЯЪА Next steps:
echo echo 1. Run 'start.bat' to start both servers
echo echo 2. Or manually start:
echo echo    - Backend: cd backend ^&^& npm start
echo echo    - Frontend: cd frontend ^&^& npm run dev
echo echo.
echo echo ЁЯФР Demo Login Credentials:
echo echo Principal: 9876543210 / 9876543210
echo echo Teacher: 9876543211 / 9876543211
echo echo.
echo echo ЁЯМР URLs:
echo echo Frontend: http://localhost:5173
echo echo Backend: http://localhost:3000
echo echo.
echo pause
) > "%EXPORT_DIR%\install.bat"

REM Create start script
(
echo @echo off
echo echo ЁЯЪА Starting School Attendance Management System...
echo echo ================================================
echo echo.
echo REM Check if dependencies are installed
echo if not exist "frontend\node_modules" ^(
echo     if not exist "backend\node_modules" ^(
echo         echo тЭМ Dependencies not installed
echo         echo Please run 'install.bat' first
echo         pause
echo         exit /b 1
echo     ^)
echo ^)
echo.
echo echo ЁЯФз Starting backend server...
echo start "Backend Server" cmd /k "cd backend && npm start"
echo.
echo echo тП│ Waiting 3 seconds for backend to start...
echo timeout /t 3 /nobreak >nul
echo.
echo echo ЁЯУ▒ Starting frontend development server...
echo start "Frontend Server" cmd /k "cd frontend && npm run dev"
echo.
echo echo.
echo echo ЁЯОЙ Both servers are starting!
echo echo ================================================
echo echo ЁЯУ▒ Frontend: http://localhost:5173
echo echo ЁЯФз Backend: http://localhost:3000
echo echo.
echo echo ЁЯФР Demo Login:
echo echo Principal: 9876543210 / 9876543210
echo echo Teacher: 9876543211 / 9876543211
echo echo.
echo echo ЁЯТб Tip: Wait for both servers to fully start before accessing
echo echo.
echo echo Press any key to close this window...
echo pause >nul
) > "%EXPORT_DIR%\start.bat"

echo тЬЕ ZIP folder рддрдпрд╛рд░ рдЭрд╛рд▓реА!
echo ЁЯУН Location: %EXPORT_DIR%
echo.
echo ЁЯУж рдЖрддрд╛ ZIP рдХрд░рд╛:
echo 1. %EXPORT_DIR% folder рд╡рд░ right-click рдХрд░рд╛
echo 2. "Send to" тЖТ "Compressed (zipped) folder" рдирд┐рд╡рдбрд╛
echo 3. ZIP file share рдХрд░рд╛
echo.
explorer "%DESKTOP%"
pause
goto :eof

:do_both
call :github_upload
echo.
call :create_zip
goto :eof